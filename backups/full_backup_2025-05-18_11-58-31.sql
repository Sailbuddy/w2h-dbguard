

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE TYPE "public"."source_type_enum" AS ENUM (
    'google',
    'hybrid',
    'custom',
    'external'
);


ALTER TYPE "public"."source_type_enum" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."attribute_definitions" (
    "id" bigint NOT NULL,
    "category_id" "text" NOT NULL,
    "key" "text",
    "name_de/en/it/hr" "text",
    "descirption_de/en/it/hr" "text",
    "input_type" "text",
    "options" "jsonb",
    "sort_order" smallint,
    "is_active" boolean
);


ALTER TABLE "public"."attribute_definitions" OWNER TO "postgres";


COMMENT ON TABLE "public"."attribute_definitions" IS 'Diese Tabelle enthält die Definition aller möglichen Felder, die du später bei Marker-Kategorien verwenden willst – z. B. „Barrierefrei“, „Tiefe“, „Vegetarisch“, „Ankergrund“, …';



ALTER TABLE "public"."attribute_definitions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."attribute_definitions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."categories" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name_de" "text",
    "name_en" "text",
    "name_it" "text",
    "name_hr" "text",
    "icon" "text",
    "active" boolean,
    "sort_order" smallint,
    "google_cat_id" "text",
    "name_fr" "text"
);


ALTER TABLE "public"."categories" OWNER TO "postgres";


COMMENT ON TABLE "public"."categories" IS 'Diese Tabelle enthält die Hauptkategorien aller Marker. Eine Kategorie bestimmt, welche Attribute, Icons und Darstellung ein Marker auf der Karte hat (z. B. Hafen, Ankerplatz, Restaurant, Werkstatt, Leuchtturm etc.).';



ALTER TABLE "public"."categories" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."categories_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."location_values" (
    "id" bigint NOT NULL,
    "location_id" bigint NOT NULL,
    "attribute_id" bigint,
    "value_text" "text",
    "value_bool" boolean,
    "value_number" double precision,
    "value_option" "text",
    "language_code" "text",
    "updated_at" timestamp with time zone
);


ALTER TABLE "public"."location_values" OWNER TO "postgres";


COMMENT ON TABLE "public"."location_values" IS 'Hier werden die Werte pro Location und Attribut gespeichert (quasi wie ein Spaltenmodell aufgelöst in Einträge).';



CREATE TABLE IF NOT EXISTS "public"."locations" (
    "id" bigint NOT NULL,
    "wind2horizon_id" "text",
    "category_id" bigint NOT NULL,
    "google_place_id" "text",
    "plus_code" "text",
    "source_type" "public"."source_type_enum",
    "sync_enabled" boolean,
    "last_sync" timestamp with time zone,
    "name_de" "text",
    "name_en" "text",
    "name_it" "text",
    "name_hr" "text",
    "description_de" "text",
    "description_en" "text",
    "description_it" "text",
    "description_hr" "text",
    "lat" numeric,
    "lng" numeric,
    "created_at" timestamp with time zone,
    "updated_at" timestamp with time zone,
    "description_fr" "text",
    "name_fr" "text"
);


ALTER TABLE "public"."locations" OWNER TO "postgres";


COMMENT ON TABLE "public"."locations" IS 'Diese Tabelle speichert alle Standorte (Marker), die in der Wind2Horizon-Karte angezeigt werden – egal ob sie aus Google Maps stammen, hybrid gepflegt werden oder vollständig eigene Inhalte darstellen. Sie ist das Herzstück des Marker-Systems und verknüpft jede Location mit einer Kategorie, Geo-Koordinaten, Mehrsprachigkeit, Quelleninformation sowie Synchronisierungsstatus.';



CREATE OR REPLACE VIEW "public"."location_export_de" AS
 SELECT "l"."id",
    "l"."name_de" AS "name",
    "l"."description_de" AS "description",
    "l"."lat",
    "l"."lng",
    "l"."plus_code",
    "c"."name_de" AS "category",
    "jsonb_object_agg"("a"."key", "lv"."value_bool") AS "attributes"
   FROM ((("public"."locations" "l"
     JOIN "public"."categories" "c" ON (("l"."category_id" = "c"."id")))
     LEFT JOIN "public"."location_values" "lv" ON ((("l"."id" = "lv"."location_id") AND ("lv"."language_code" = 'de'::"text"))))
     LEFT JOIN "public"."attribute_definitions" "a" ON (("lv"."attribute_id" = "a"."id")))
  WHERE ("l"."sync_enabled" = true)
  GROUP BY "l"."id", "l"."name_de", "l"."description_de", "l"."lat", "l"."lng", "l"."plus_code", "c"."name_de";


ALTER TABLE "public"."location_export_de" OWNER TO "postgres";


ALTER TABLE "public"."location_values" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."location_values_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."locations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."locations_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."attribute_definitions"
    ADD CONSTRAINT "attribute_definitions_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."categories"
    ADD CONSTRAINT "categories_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."location_values"
    ADD CONSTRAINT "location_values_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."locations"
    ADD CONSTRAINT "locations_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."location_values"
    ADD CONSTRAINT "location_values_attribute_id_fkey" FOREIGN KEY ("attribute_id") REFERENCES "public"."attribute_definitions"("id");



ALTER TABLE ONLY "public"."location_values"
    ADD CONSTRAINT "location_values_location_id_fkey" FOREIGN KEY ("location_id") REFERENCES "public"."locations"("id");



ALTER TABLE ONLY "public"."locations"
    ADD CONSTRAINT "locations_category_id_fkey" FOREIGN KEY ("category_id") REFERENCES "public"."categories"("id");



CREATE POLICY "Allow anon read" ON "public"."categories" FOR SELECT USING (true);



CREATE POLICY "Allow anon read" ON "public"."location_values" FOR SELECT TO "anon" USING (true);



CREATE POLICY "Allow anon read" ON "public"."locations" FOR SELECT TO "anon" USING (true);



ALTER TABLE "public"."attribute_definitions" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."categories" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."location_values" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."locations" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";


























































































































































































GRANT ALL ON TABLE "public"."attribute_definitions" TO "anon";
GRANT ALL ON TABLE "public"."attribute_definitions" TO "authenticated";
GRANT ALL ON TABLE "public"."attribute_definitions" TO "service_role";



GRANT ALL ON SEQUENCE "public"."attribute_definitions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."attribute_definitions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."attribute_definitions_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."categories" TO "anon";
GRANT ALL ON TABLE "public"."categories" TO "authenticated";
GRANT ALL ON TABLE "public"."categories" TO "service_role";



GRANT ALL ON SEQUENCE "public"."categories_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."categories_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."categories_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."location_values" TO "anon";
GRANT ALL ON TABLE "public"."location_values" TO "authenticated";
GRANT ALL ON TABLE "public"."location_values" TO "service_role";



GRANT ALL ON TABLE "public"."locations" TO "anon";
GRANT ALL ON TABLE "public"."locations" TO "authenticated";
GRANT ALL ON TABLE "public"."locations" TO "service_role";



GRANT ALL ON TABLE "public"."location_export_de" TO "anon";
GRANT ALL ON TABLE "public"."location_export_de" TO "authenticated";
GRANT ALL ON TABLE "public"."location_export_de" TO "service_role";



GRANT ALL ON SEQUENCE "public"."location_values_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."location_values_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."location_values_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."locations_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."locations_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."locations_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
